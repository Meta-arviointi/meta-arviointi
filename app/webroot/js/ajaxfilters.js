/* Generated by CoffeeHelper at 2013-02-13 13:59:26 */

// Generated by CoffeeScript PHP 1.3.1
(function() {

  (function($) {
    return $.fn.ajaxfilters = function(settings) {
      var defaults;
      defaults = {
        callback: null
      };
      settings = $.extend({}, defaults, settings);
      $.param.fragment.noEscape("[],");
      return this.each(function() {
        var forms, id, inputs, table, tbody;
        table = $(this);
        id = table.attr('id');
        tbody = table.children('tbody');
        forms = $('*[data-target="' + id + '"]');
        inputs = forms.find('input, select');
        console.log(inputs);
        /*
                    inputs.change ->
                        state = {}
                        target = form.attr 'data-target'
                        params = {}
                        for i in inputs
                            params[$(i).attr('name')] = $(i).val()
                        state[target] = params
                        $.bbq.pushState state
        */

        inputs.change(function() {
          var i, params, state, _i, _len;
          params = {};
          state = {};
          for (_i = 0, _len = inputs.length; _i < _len; _i++) {
            i = inputs[_i];
            params[$(i).attr('name')] = $(i).val();
          }
          state[id] = params;
          return $.bbq.pushState(state);
        });
        return $(window).bind('hashchange', function(e) {
          var key, state, val;
          state = $.bbq.getState();
          console.log(state);
          for (key in state) {
            val = state[key];
            forms.find('*[name=' + key + ']').val(val);
          }
          return tbody.load(table.attr('data-source'), $.bbq.getState(id));
        });
      });
    };
  })(jQuery);

  /*
  
      # AJAX FILTERING AND SORTING
  
      $.param.fragment.noEscape("[],");
  
      q = window.location.hash
      $('#browse-filters select').change ->
          $.bbq.pushState $(this).parents('form').serialize()
          return
  
      $('#browse-sorters input').click ->
          # Just reordering ASC/DESC?
          newSort = $(this).attr('id').replace('sort-by-', '');
          if $.bbq.getState('sort') == newSort
              if$.bbq.getState('order') == 'DESC'
                  $.bbq.pushState 'order=ASC'
              else
                  $.bbq.pushState 'order=DESC'
          # Real sorting
          else
              $.bbq.pushState('sort=' + newSort + '&order=ASC');
          return false
  
      $(window).bind('hashchange', function(e) {
          $.each(['make','adapter','system','class','state'], function(k,v) {
              if(e.getState(v)) $('#browse-filters select[name='+v+']').val(e.getState(v));
          });
          
          if($.bbq.getState('quick') && $.bbq.getState('quick') != "") {
              var quick = $.bbq.getState('quick').split(',');
              $('#quick-links a').each(function() {
                  if($.inArray($(this).attr('href').replace('#', ''), quick) == -1) $(this).removeClass('active');
                  else $(this).addClass('active');
              }); 
          }
          else {
              $('#quick-links a').removeClass('active');
          }
          
          $('#browse-sorters input').removeClass('active').find('#sort-by-' + $.bbq.getState('sort')).addClass('active');
          
          $.get('/browse_ajax.php?' + e.fragment, function(data) {
              $('#browse-items tbody').html(data);
              $('#total-amount').text($('#browse-items tbody').children().length);
          });
      });
  
      $(window).trigger('hashchange');
  */


}).call(this);
